%title:nginx的模块化体系结构

\section{模块化}
模块化的好处我就不多说了. nginx 由nginx core 与一系列的功能模块组成.
各个功能模块完成一个独立的功能, 通过注册的方式被挂到对应的位置上.
核心的功能实现如http, mail会在适当的时机调用.

各个模块在初始化的时候, 会在对应的时机调用模块的初始化功能.
\section{模块分类}
\startitemize
\item  [event module:]  搭建了独立于操作系统的事件处理机制的框架，及提供了各具体事件的处理。
            包括ngx_events_module， ngx_event_core_module和ngx_epoll_module等。
            nginx具体使用何种事件处理模块，这依赖于具体的操作系统和编译选项。
\item  [phase handler:] 此类型的模块也被直接称为handler模块。
            主要负责处理客户端请求并产生待响应内容，比如ngx_http_static_module模块，
            负责客户端的静态页面请求处理并将对应的磁盘文件准备为响应内容输出。
\item  [output filter:] 也称为filter模块，主要是负责对输出的内容进行处理，可以对输出进行修改。
            例如，可以实现对输出的所有html页面增加预定义的footbar一类的工作，
            或者对输出的图片的URL进行替换之类的工作。
\item  [upstream:]      upstream模块实现反向代理的功能，将真正的请求转发到后端服务器上，并从后端服务器上读取响应，
            发回客户端。upstream模块是一种特殊的handler，只不过响应内容不是真正由自己产生的，而是从后端服务器上读取的。
\item  [load-balancer:] 负载均衡模块，实现特定的算法，在众多的后端服务器中，
            选择一个服务器出来作为某个请求的转发服务器。
\stopitemize

\section{参考}
\goto[Nginx开发从入门到精通(nginx的模块化体系结构)][http://tengine.taobao.org/book/chapter_02.html#nginx]